1. How did viewing a diff between two versions of a file help you see the bug that was introduced?
    There is no need to look into all the code lines are you comparing with if you have a tool that gives you only what has changed.


2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
    You can compare versions, see what has changed and check if it is correct or not. You can also follow your improvements.


3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
    Pros.: you can choose to create commit when it makes sense for you, the commit doesn't need neither to have the same sizer or be done during a certain period.
    Cons.: you can forget to do the commit.


4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
    Because one file could be related to the other and affect the project.


5. How can you use the commands git log and git diff to view the history of files?
    You can use git log to find the commit you want and git diff to see the difference between them.